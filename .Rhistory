# MetaboAnalyst Analysis
library(tidyverse)
library(MetaboAnalystR)
in_files = list.files(path = "Inputs/",
pattern = "CleanUp_",
full.names = T)
tableContrast <-
data.frame(Numerator = c("AC9.1", "AC9.2", "AC9.3",
"AC9.1", "AC9.2", "AC9.1"),
Denominator = c("E30", "E30", "E30",
"AC9.3", "AC9.3", "AC9.2"))
for (i in 1:3) {
AnalysisMode <- gsub("CleanUp_LCMSMS_(.+)_rawHeight.txt",
"\\1", basename(in_files[i]))
plots_basename <- paste0("plots/", AnalysisMode, "/")
results_basename <- paste0("Results/", AnalysisMode)
mSet<-InitDataObjects(data.type = "pktable",
anal.type = "stat",
paired = FALSE);
mSet<-Read.TextData(mSetObj = mSet,
filePath = in_files[i],
format = "colu",
lbl.type = "disc");
mSet<-SanityCheckData(mSet);
mSet<-ReplaceMin(mSet);
mSet<-SanityCheckData(mSet);
mSet<-FilterVariable(mSet, qc.filter = "T", rsd = 25,
var.filter = "none", var.cutoff = -1,
int.filter = "mean", int.cutoff = 0)
mSet<-PreparePrenormData(mSet);
mSet<-Normalization(mSet, "GroupPQN", transNorm = "LogNorm",
scaleNorm = "ParetoNorm", ref = "QC",
ratio=FALSE, ratioNum=20)
mSet<-PlotNormSummary(mSet, imgName = paste0(plots_basename,
"rowNormalization_"),
format ="png", dpi=300, width=NA);
mSet<-PlotSampleNormSummary(mSet, imgName = paste0(plots_basename,
"colNormalization_"),
format ="png", dpi=300, width=NA);
save(mSet, file = paste0(results_basename, "_mSet.RData"))
}
# MetaboAnalyst Analysis
library(tidyverse)
library(MetaboAnalystR)
in_files = list.files(path = "Inputs/",
pattern = "CleanUp_",
full.names = T)
tableContrast <-
data.frame(Numerator = c("AC9.1", "AC9.2", "AC9.3",
"AC9.1", "AC9.2", "AC9.1"),
Denominator = c("E30", "E30", "E30",
"AC9.3", "AC9.3", "AC9.2"))
for (i in 1:3) {
AnalysisMode <- gsub("CleanUp_LCMSMS_(.+)_rawHeight.txt",
"\\1", basename(in_files[i]))
plots_basename <- paste0("plots/", AnalysisMode, "/")
results_basename <- paste0("Results/", AnalysisMode)
mSet<-InitDataObjects(data.type = "pktable",
anal.type = "stat",
paired = FALSE);
mSet<-Read.TextData(mSetObj = mSet,
filePath = in_files[i],
format = "colu",
lbl.type = "disc");
mSet<-SanityCheckData(mSet);
mSet<-ReplaceMin(mSet);
mSet<-SanityCheckData(mSet);
mSet<-FilterVariable(mSet, qc.filter = "T", rsd = 25,
var.filter = "none", var.cutoff = -1,
int.filter = "mean", int.cutoff = 0)
mSet<-PreparePrenormData(mSet);
mSet<-Normalization(mSet, "GroupPQN", transNorm = "LogNorm",
scaleNorm = "ParetoNorm", ref = "QC",
ratio=FALSE, ratioNum=20)
mSet<-PlotNormSummary(mSet, imgName = paste0(plots_basename,
"rowNormalization_"),
format ="png", dpi=300, width=NA);
mSet<-PlotSampleNormSummary(mSet, imgName = paste0(plots_basename,
"colNormalization_"),
format ="png", dpi=300, width=NA);
save(mSet, file = paste0(results_basename, "_mSet.RData"))
}
traceback()
AnalysisMode
results_basename <- paste0("Results/", AnalysisMode)
mSet<-InitDataObjects(data.type = "pktable",
anal.type = "stat",
paired = FALSE);
rm(mSet)
mSet<-InitDataObjects(data.type = "pktable",
anal.type = "stat",
paired = FALSE);
mSet<-Read.TextData(mSetObj = mSet,
filePath = in_files[i],
format = "colu",
lbl.type = "disc");
mSet<-SanityCheckData(mSet);
in_files[i]
mSet<-Read.TextData(mSetObj = mSet,
filePath = in_files[i],
format = "colu",
lbl.type = "disc");
rm(mSet)
mSet<-InitDataObjects(data.type = "pktable",
anal.type = "stat",
paired = FALSE);
mSet<-Read.TextData(mSetObj = mSet,
filePath = in_files[i],
format = "colu",
lbl.type = "disc");
mSet<-Read.TextData(mSetObj = mSet,
filePath = in_files[i],
format = "colu",
lbl.type = "disc");
read_delim(in_files)
library(tidyverse)
blank_threshold = 3
in_files = list.files(path = "Inputs",
pattern = "^LCMSMS.*rawHeight.txt",
full.names = T)
out_files = sapply(in_files, \(x) {
paste0("Inputs/CleanUp_", basename(x))
})
for (fileNumber in 1:3) {
input = read_delim(in_files[fileNumber]) %>%
as.data.frame()
print(head(n=2, input))
input[1,grepl("BLANK", input[1,])] = "BLANK"
metadata = data.frame(Replicates = names(input)[-1],
Groups = input[1,-1] %>% as.character
)
measures = apply(input[-1,-1], 2, \(x) {
as.numeric(x)
}) %>%
as.data.frame
rownames(measures) = input[-1,1]
blank_value = apply(measures[, metadata$Groups == "BLANK"],
1, max)
clones = metadata[!metadata$Groups %in% c("BLANK", "QC"),]$Groups %>% unique
greater_than_blank =
apply(measures[, !metadata$Groups  == "BLANK"],
2, \(x) {
result = (x - blank_value*blank_threshold)
ifelse(result < 0, 0,
result)
}) %>% data.frame(row.names = rownames(measures))
present_twoMore_reps =
sapply(c(clones, "QC"), \(x) {
colsInterest = (metadata %>%
filter(Groups == x))$Replicates
samples_GTB = greater_than_blank[, colsInterest] %>%
apply(MARGIN=1, \(x) as.logical(x) %>% sum)
samples_GTB >= 2
}) %>% as.data.frame
measures_greater_than_blank = greater_than_blank %>%
mutate(Sample = input$Sample[-1]) %>%
select(Sample,
all_of(metadata$Replicates[metadata$Groups != "BLANK"])) %>%
as.data.frame(row.names = input$Sample[-1])
measurements = sapply(names(measures_greater_than_blank)[-1],
simplify = T, \(colName) {
cloneName = metadata$Groups[metadata$Replicates == colName]
sapply(1:nrow(present_twoMore_reps), \(met) {
ifelse(
present_twoMore_reps[met, cloneName],
measures_greater_than_blank[met, colName],
0)
})
}) %>% as.data.frame(row.names = input$Sample[-1])
measures = measurements [!apply(measurements, 1, \(x) all(x == "0")),
metadata$Replicates[!metadata$Groups %in% c("BLANK")],]
cbind(Sample = c("Label", rownames(measures)),
rbind((data.frame(metadata$Groups[metadata$Groups !="BLANK"],
row.names = metadata$Replicates[metadata$Groups !="BLANK"]) %>%
unname %>% t), measures)
) %>% as_tibble %>%
write_delim(file = out_files[fileNumber], delim = "\t", append = F)
}
View(measures)
cbind(Sample = c("Label", rownames(measures)),
rbind((data.frame(metadata$Groups[metadata$Groups !="BLANK"],
row.names = metadata$Replicates[metadata$Groups !="BLANK"]) %>%
unname %>% t), measures)
) %>% as_tibble
out_files[fileNumber]
in_files = list.files(path = "Inputs/",
pattern = "CleanUp_",
full.names = T)
i=fileNumber
i
in_files = list.files(path = "Inputs/",
pattern = "CleanUp_",
full.names = T)
AnalysisMode <- gsub("CleanUp_LCMSMS_(.+)_rawHeight.txt",
"\\1", basename(in_files[i]))
AnalysisMode
plots_basename <- paste0("plots/", AnalysisMode, "/")
results_basename <- paste0("Results/", AnalysisMode)
mSet<-InitDataObjects(data.type = "pktable",
anal.type = "stat",
paired = FALSE);
rm(mSet)
mSet<-InitDataObjects(data.type = "pktable",
anal.type = "stat",
paired = FALSE);
mSet<-Read.TextData(mSetObj = mSet,
filePath = in_files[i],
format = "colu",
lbl.type = "disc");
mSet<-SanityCheckData(mSet);
mSet<-ReplaceMin(mSet);
mSet<-SanityCheckData(mSet);
mSet<-FilterVariable(mSet, qc.filter = "T", rsd = 25,
var.filter = "none", var.cutoff = -1,
int.filter = "mean", int.cutoff = 0)
mSet<-PreparePrenormData(mSet);
mSet<-Normalization(mSet, "GroupPQN", transNorm = "LogNorm",
scaleNorm = "ParetoNorm", ref = "QC",
ratio=FALSE, ratioNum=20)
mSet<-PlotNormSummary(mSet, imgName = paste0(plots_basename,
"rowNormalization_"),
format ="png", dpi=300, width=NA);
mSet<-PlotSampleNormSummary(mSet, imgName = paste0(plots_basename,
"colNormalization_"),
format ="png", dpi=300, width=NA);
# MetaboAnalyst Analysis
library(tidyverse)
library(MetaboAnalystR)
in_files = list.files(path = "Inputs/",
pattern = "CleanUp_",
full.names = T)
tableContrast <-
data.frame(Numerator = c("AC9.1", "AC9.2", "AC9.3",
"AC9.1", "AC9.2", "AC9.1"),
Denominator = c("E30", "E30", "E30",
"AC9.3", "AC9.3", "AC9.2"))
for (i in 1:3) {
AnalysisMode <- gsub("CleanUp_LCMSMS_(.+)_rawHeight.txt",
"\\1", basename(in_files[i]))
plots_basename <- paste0("plots/", AnalysisMode, "/")
results_basename <- paste0("Results/", AnalysisMode)
mSet<-InitDataObjects(data.type = "pktable",
anal.type = "stat",
paired = FALSE);
mSet<-Read.TextData(mSetObj = mSet,
filePath = in_files[i],
format = "colu",
lbl.type = "disc");
mSet<-SanityCheckData(mSet);
mSet<-ReplaceMin(mSet);
mSet<-SanityCheckData(mSet);
mSet<-FilterVariable(mSet, qc.filter = "T", rsd = 25,
var.filter = "none", var.cutoff = -1,
int.filter = "mean", int.cutoff = 0)
mSet<-PreparePrenormData(mSet);
mSet<-Normalization(mSet, "GroupPQN", transNorm = "LogNorm",
scaleNorm = "ParetoNorm", ref = "QC",
ratio=FALSE, ratioNum=20)
mSet<-PlotNormSummary(mSet, imgName = paste0(plots_basename,
"rowNormalization_"),
format ="png", dpi=300, width=NA);
mSet<-PlotSampleNormSummary(mSet, imgName = paste0(plots_basename,
"colNormalization_"),
format ="png", dpi=300, width=NA);
save(mSet, file = paste0(results_basename, "_mSet.RData"))
}
# MetaboAnalyst Analysis
library(tidyverse)
library(MetaboAnalystR)
in_files = list.files(path = "Inputs/",
pattern = "CleanUp_",
full.names = T)
tableContrast <-
data.frame(Numerator = c("AC9.1", "AC9.2", "AC9.3",
"AC9.1", "AC9.2", "AC9.1"),
Denominator = c("E30", "E30", "E30",
"AC9.3", "AC9.3", "AC9.2"))
for (i in 1:3) {
AnalysisMode <- gsub("CleanUp_LCMSMS_(.+)_rawHeight.txt",
"\\1", basename(in_files[i]))
plots_basename <- paste0("plots/", AnalysisMode, "/")
results_basename <- paste0("Results/", AnalysisMode)
mSet<-InitDataObjects(data.type = "pktable",
anal.type = "stat",
paired = FALSE);
mSet<-Read.TextData(mSetObj = mSet,
filePath = in_files[i],
format = "colu",
lbl.type = "disc");
mSet<-SanityCheckData(mSet);
mSet<-ReplaceMin(mSet);
mSet<-SanityCheckData(mSet);
mSet<-FilterVariable(mSet, qc.filter = "T", rsd = 25,
var.filter = "none", var.cutoff = -1,
int.filter = "mean", int.cutoff = 0)
mSet<-PreparePrenormData(mSet);
mSet<-Normalization(mSet, "GroupPQN", transNorm = "LogNorm",
scaleNorm = "ParetoNorm", ref = "QC",
ratio=FALSE, ratioNum=20)
mSet<-PlotNormSummary(mSet, imgName = paste0(plots_basename,
"rowNormalization_"),
format ="png", dpi=300, width=NA);
mSet<-PlotSampleNormSummary(mSet, imgName = paste0(plots_basename,
"colNormalization_"),
format ="png", dpi=300, width=NA);
save(mSet, file = paste0(results_basename, "_mSet.RData"))
}
# MetaboAnalyst sigggenes pipeline
library(tidyverse)
library(MetaboAnalystR)
library(ggrepel)
library(RColorBrewer)
theme_classic() %>% theme_set()
Analysis_modes = c("HILIC_Positive",
"RP_Positive",
"RP_Negative")
inFiles <- paste0("Results/", Analysis_modes, "_mSet.RData")
plot_basename <- paste0("plots/", Analysis_modes, "/")
tableContrast <-
data.frame(Numerator = c("AC9.1", "AC9.2", "AC9.3",
"AC9.1", "AC9.2", "AC9.1"),
Denominator = c("E30", "E30", "E30",
"AC9.3", "AC9.3", "AC9.2"))
FDR_threshold = 0.05
adjusted_FDR_threshold = 0.00833333233333
FC_threshold = 2
met_abundance <- list()
differential_abundance <- list()
for (i in 1:3) {
pdf(file = paste0(plot_basename[i],
"Differential_analysis.pdf"),
width = 6, height = 6, onefile = T)
rm("mSet")
load(inFiles[i])
met_abundance[[i]] <- mSet$dataSet$norm
differential_abundance[[i]] <- list()
for (j in 1:nrow(tableContrast)){
print(tableContrast[j,])
numerator = tableContrast$Numerator[j]
denominator = tableContrast$Denominator[j]
contrastName = paste0(numerator, "_v_", denominator)
replicates = rownames(mSet$dataSet$norm)
mSet_subset_norm = met_abundance[[i]][c(grep(numerator, replicates),
grep(denominator, replicates)), ]
cls_subset = factor(rep(tableContrast[j,] %>% unlist, each = 3),
levels = tableContrast[j,])
SAM = siggenes::sam(t(mSet_subset_norm),
cl = cls_subset,
method = "d.stat", B=100,
gene.names = names(mSet_subset_norm),
med = F, use.dm = T,
var.equal = T,
control = samControl(n.delta = 120),
R.fold = FC_threshold
)
SAM@msg = c(contrastName, SAM@msg)
deltaValue = findDelta(SAM, fdr = adjusted_FDR_threshold)
if (nrow(deltaValue) %>% is.null) {
deltaValue = deltaValue["Delta"]
} else {
deltaValue = deltaValue[order(deltaValue[,"FDR"]), "Delta"]
}
sam.plot2(SAM, deltaValue, sig.col = c("blue", "red"),
main = paste0(numerator, " vs ", denominator)
)
differential_abundance[[i]][[contrastName]] <-
data.frame(AnalysisMode = Analysis_modes[i],
Contrast = contrastName,
plotContrast = paste0(numerator, " vs ", denominator),
Metabolite = names(SAM@d),
Ratio_Change = SAM@fold,
FoldChange = log2(SAM@fold),
pValue = SAM@p.value,
padj = SAM@q.value)
}
differential_abundance[[i]] <-
differential_abundance[[i]] %>%
list_rbind()
dev.off()
}
# MetaboAnalyst sigggenes pipeline
library(tidyverse)
library(MetaboAnalystR)
library(ggrepel)
library(RColorBrewer)
theme_classic() %>% theme_set()
Analysis_modes = c("HILIC_Positive",
"RP_Positive",
"RP_Negative")
inFiles <- paste0("Results/", Analysis_modes, "_mSet.RData")
plot_basename <- paste0("plots/", Analysis_modes, "/")
tableContrast <-
data.frame(Numerator = c("AC9.1", "AC9.2", "AC9.3",
"AC9.1", "AC9.2", "AC9.1"),
Denominator = c("E30", "E30", "E30",
"AC9.3", "AC9.3", "AC9.2"))
FDR_threshold = 0.05
adjusted_FDR_threshold = 0.00833333233333
FC_threshold = 2
met_abundance <- list()
differential_abundance <- list()
for (i in 1:3) {
pdf(file = paste0(plot_basename[i],
"Differential_analysis.pdf"),
width = 6, height = 6, onefile = T)
rm("mSet")
load(inFiles[i])
met_abundance[[i]] <- mSet$dataSet$norm
differential_abundance[[i]] <- list()
for (j in 1:nrow(tableContrast)){
print(tableContrast[j,])
numerator = tableContrast$Numerator[j]
denominator = tableContrast$Denominator[j]
contrastName = paste0(numerator, "_v_", denominator)
replicates = rownames(mSet$dataSet$norm)
mSet_subset_norm = met_abundance[[i]][c(grep(numerator, replicates),
grep(denominator, replicates)), ]
cls_subset = factor(rep(tableContrast[j,] %>% unlist, each = 3),
levels = tableContrast[j,])
SAM = siggenes::sam(t(mSet_subset_norm),
cl = cls_subset,
method = "d.stat", B=100,
gene.names = names(mSet_subset_norm),
med = F, use.dm = T,
var.equal = T,
control = samControl(n.delta = 120),
R.fold = FC_threshold
)
SAM@msg = c(contrastName, SAM@msg)
deltaValue = findDelta(SAM, fdr = adjusted_FDR_threshold)
if (nrow(deltaValue) %>% is.null) {
deltaValue = deltaValue["Delta"]
} else {
deltaValue = deltaValue[order(deltaValue[,"FDR"]), "Delta"]
}
sam.plot2(SAM, deltaValue, sig.col = c("blue", "red"),
main = paste0(numerator, " vs ", denominator)
)
differential_abundance[[i]][[contrastName]] <-
data.frame(AnalysisMode = Analysis_modes[i],
Contrast = contrastName,
plotContrast = paste0(numerator, " vs ", denominator),
Metabolite = names(SAM@d),
Ratio_Change = SAM@fold,
FoldChange = log2(SAM@fold),
pValue = SAM@p.value,
padj = SAM@q.value)
}
differential_abundance[[i]] <-
differential_abundance[[i]] %>%
list_rbind()
dev.off()
}
library(siggenes)
for (i in 1:3) {
pdf(file = paste0(plot_basename[i],
"Differential_analysis.pdf"),
width = 6, height = 6, onefile = T)
rm("mSet")
load(inFiles[i])
met_abundance[[i]] <- mSet$dataSet$norm
differential_abundance[[i]] <- list()
for (j in 1:nrow(tableContrast)){
print(tableContrast[j,])
numerator = tableContrast$Numerator[j]
denominator = tableContrast$Denominator[j]
contrastName = paste0(numerator, "_v_", denominator)
replicates = rownames(mSet$dataSet$norm)
mSet_subset_norm = met_abundance[[i]][c(grep(numerator, replicates),
grep(denominator, replicates)), ]
cls_subset = factor(rep(tableContrast[j,] %>% unlist, each = 3),
levels = tableContrast[j,])
SAM = siggenes::sam(t(mSet_subset_norm),
cl = cls_subset,
method = "d.stat", B=100,
gene.names = names(mSet_subset_norm),
med = F, use.dm = T,
var.equal = T,
control = samControl(n.delta = 120),
R.fold = FC_threshold
)
SAM@msg = c(contrastName, SAM@msg)
deltaValue = findDelta(SAM, fdr = adjusted_FDR_threshold)
if (nrow(deltaValue) %>% is.null) {
deltaValue = deltaValue["Delta"]
} else {
deltaValue = deltaValue[order(deltaValue[,"FDR"]), "Delta"]
}
sam.plot2(SAM, deltaValue, sig.col = c("blue", "red"),
main = paste0(numerator, " vs ", denominator)
)
differential_abundance[[i]][[contrastName]] <-
data.frame(AnalysisMode = Analysis_modes[i],
Contrast = contrastName,
plotContrast = paste0(numerator, " vs ", denominator),
Metabolite = names(SAM@d),
Ratio_Change = SAM@fold,
FoldChange = log2(SAM@fold),
pValue = SAM@p.value,
padj = SAM@q.value)
}
differential_abundance[[i]] <-
differential_abundance[[i]] %>%
list_rbind()
dev.off()
}
for (i in list.files(".", patter=".(qs|csv)")) {
file.remove(i)
}
save(differential_abundance, file = "Results/Siggenes_DAAs.RData")
source("D:/Metabolomics_Metaboanalyst_2024_Sene/scripts/4-Heatmap_FC_Abundance.R")
source("D:/Metabolomics_Metaboanalyst_2024_Sene/scripts/4.1-Heatmap_FC_Abundance_18082024.R")
